// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dozo.proto

package dozo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The GameParameter packet defines the board length and number of colors used.
type GameParameter struct {
	BoardLength          uint32   `protobuf:"varint,1,opt,name=board_length,json=boardLength,proto3" json:"board_length,omitempty"`
	NumberOfColors       uint32   `protobuf:"varint,2,opt,name=number_of_colors,json=numberOfColors,proto3" json:"number_of_colors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameParameter) Reset()         { *m = GameParameter{} }
func (m *GameParameter) String() string { return proto.CompactTextString(m) }
func (*GameParameter) ProtoMessage()    {}
func (*GameParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_dafb1e8725ea4b97, []int{0}
}

func (m *GameParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameParameter.Unmarshal(m, b)
}
func (m *GameParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameParameter.Marshal(b, m, deterministic)
}
func (m *GameParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameParameter.Merge(m, src)
}
func (m *GameParameter) XXX_Size() int {
	return xxx_messageInfo_GameParameter.Size(m)
}
func (m *GameParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_GameParameter.DiscardUnknown(m)
}

var xxx_messageInfo_GameParameter proto.InternalMessageInfo

func (m *GameParameter) GetBoardLength() uint32 {
	if m != nil {
		return m.BoardLength
	}
	return 0
}

func (m *GameParameter) GetNumberOfColors() uint32 {
	if m != nil {
		return m.NumberOfColors
	}
	return 0
}

// The GameTurn packet defines the position and color of the placed stone.
// The first color is indexed 0.
// The top of the triangular board is indexed (x|y) = (0|0).
//
// Example:
//        (0|0)
//     (0|1),(1|1)
//   (0|2),(1|2),(2|2)
// (0|3),(1|3),(2|3),(3|3)
//
// Hint: The indexing of the triangular board matches a 2d-array with some invalid fields.
type GameTurn struct {
	X                    uint32   `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    uint32   `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Color                uint32   `protobuf:"varint,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameTurn) Reset()         { *m = GameTurn{} }
func (m *GameTurn) String() string { return proto.CompactTextString(m) }
func (*GameTurn) ProtoMessage()    {}
func (*GameTurn) Descriptor() ([]byte, []int) {
	return fileDescriptor_dafb1e8725ea4b97, []int{1}
}

func (m *GameTurn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameTurn.Unmarshal(m, b)
}
func (m *GameTurn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameTurn.Marshal(b, m, deterministic)
}
func (m *GameTurn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameTurn.Merge(m, src)
}
func (m *GameTurn) XXX_Size() int {
	return xxx_messageInfo_GameTurn.Size(m)
}
func (m *GameTurn) XXX_DiscardUnknown() {
	xxx_messageInfo_GameTurn.DiscardUnknown(m)
}

var xxx_messageInfo_GameTurn proto.InternalMessageInfo

func (m *GameTurn) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *GameTurn) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *GameTurn) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

// The GameState packet defines the current board state of the match.
type GameState struct {
	BoardLength    uint32 `protobuf:"varint,1,opt,name=board_length,json=boardLength,proto3" json:"board_length,omitempty"`
	NumberOfColors uint32 `protobuf:"varint,2,opt,name=number_of_colors,json=numberOfColors,proto3" json:"number_of_colors,omitempty"`
	// The board_data byte array contains only the triangular board.
	// Each byte contains the color of this position, or 0xFF if the position is unoccupied.
	//
	// Example:
	//        (0|0)
	//     (0|1),(1|1)
	// board_data = { color(0|0), color(0|1), color(1|1) }
	//
	// Hint: If you want to use a 2d-array for your client, here is an example of how to read the data nicely.
	//
	//  for (size_t y = 0; y < length; ++y)
	//  {
	//    for (size_t x = 0; x <= y; ++x)
	//    {
	//      client_data[y][x] = gamestate_board_data[x + y * (y + 1) / 2];
	//    }
	//  }
	BoardData            []byte   `protobuf:"bytes,3,opt,name=board_data,json=boardData,proto3" json:"board_data,omitempty"`
	RemainingStones      []uint32 `protobuf:"varint,4,rep,packed,name=remaining_stones,json=remainingStones,proto3" json:"remaining_stones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameState) Reset()         { *m = GameState{} }
func (m *GameState) String() string { return proto.CompactTextString(m) }
func (*GameState) ProtoMessage()    {}
func (*GameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_dafb1e8725ea4b97, []int{2}
}

func (m *GameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameState.Unmarshal(m, b)
}
func (m *GameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameState.Marshal(b, m, deterministic)
}
func (m *GameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameState.Merge(m, src)
}
func (m *GameState) XXX_Size() int {
	return xxx_messageInfo_GameState.Size(m)
}
func (m *GameState) XXX_DiscardUnknown() {
	xxx_messageInfo_GameState.DiscardUnknown(m)
}

var xxx_messageInfo_GameState proto.InternalMessageInfo

func (m *GameState) GetBoardLength() uint32 {
	if m != nil {
		return m.BoardLength
	}
	return 0
}

func (m *GameState) GetNumberOfColors() uint32 {
	if m != nil {
		return m.NumberOfColors
	}
	return 0
}

func (m *GameState) GetBoardData() []byte {
	if m != nil {
		return m.BoardData
	}
	return nil
}

func (m *GameState) GetRemainingStones() []uint32 {
	if m != nil {
		return m.RemainingStones
	}
	return nil
}

func init() {
	proto.RegisterType((*GameParameter)(nil), "dzo.GameParameter")
	proto.RegisterType((*GameTurn)(nil), "dzo.GameTurn")
	proto.RegisterType((*GameState)(nil), "dzo.GameState")
}

func init() {
	proto.RegisterFile("dozo.proto", fileDescriptor_dafb1e8725ea4b97)
}

var fileDescriptor_dafb1e8725ea4b97 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0xd0, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x06, 0x60, 0xd6, 0xaa, 0xd8, 0x31, 0xd1, 0xb2, 0xf4, 0x90, 0x8b, 0x50, 0x73, 0x8a, 0x17,
	0x7b, 0xf0, 0xea, 0x49, 0x05, 0x2f, 0x82, 0x92, 0x7a, 0x12, 0x61, 0x99, 0x98, 0x69, 0x2c, 0xed,
	0xee, 0x94, 0xcd, 0x14, 0xda, 0x3e, 0x8e, 0x4f, 0x2a, 0x99, 0x14, 0x9f, 0xc0, 0xe3, 0x7c, 0xec,
	0xfc, 0x3b, 0xfc, 0x00, 0x35, 0xef, 0xf9, 0x76, 0x1d, 0x59, 0xd8, 0x0e, 0xea, 0x3d, 0xe7, 0x9f,
	0x90, 0x3e, 0xa3, 0xa7, 0x37, 0x8c, 0xe8, 0x49, 0x28, 0xda, 0x6b, 0x48, 0x2a, 0xc6, 0x58, 0xbb,
	0x15, 0x85, 0x46, 0xbe, 0x33, 0x33, 0x31, 0x45, 0x5a, 0x9e, 0xab, 0xbd, 0x28, 0xd9, 0x02, 0x46,
	0x61, 0xe3, 0x2b, 0x8a, 0x8e, 0xe7, 0xee, 0x8b, 0x57, 0x1c, 0xdb, 0xec, 0x48, 0x9f, 0x5d, 0xf4,
	0xfe, 0x3a, 0x7f, 0x54, 0xcd, 0xef, 0xe1, 0xac, 0x4b, 0x7f, 0xdf, 0xc4, 0x60, 0x13, 0x30, 0xdb,
	0x43, 0x9a, 0xd9, 0x76, 0xd3, 0xee, 0xb0, 0x64, 0x76, 0x76, 0x0c, 0x27, 0x9a, 0x93, 0x0d, 0x54,
	0xfa, 0x21, 0xff, 0x31, 0x30, 0xec, 0xd6, 0x67, 0x82, 0x42, 0xff, 0x7a, 0x98, 0xbd, 0x02, 0xe8,
	0xc3, 0x6a, 0x14, 0xd4, 0x5f, 0x93, 0x72, 0xa8, 0xf2, 0x84, 0x82, 0xf6, 0x06, 0x46, 0x91, 0x3c,
	0x2e, 0xc2, 0x22, 0x34, 0xae, 0x15, 0x0e, 0xd4, 0x66, 0xc7, 0x93, 0x41, 0x91, 0x96, 0x97, 0x7f,
	0x3e, 0x53, 0x7e, 0x18, 0x7f, 0x58, 0xa1, 0x25, 0xbb, 0x06, 0x3d, 0x4d, 0xd7, 0xcb, 0x66, 0xda,
	0x35, 0x5c, 0x9d, 0x6a, 0xc5, 0x77, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x81, 0xd2, 0x6c, 0x55,
	0x70, 0x01, 0x00, 0x00,
}
