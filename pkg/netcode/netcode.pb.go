// Code generated by protoc-gen-go. DO NOT EDIT.
// source: netcode.proto

package netcode

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	dab "teko_game/pkg/dab"
	dom "teko_game/pkg/dom"
	dozo "teko_game/pkg/dozo"
	nim "teko_game/pkg/nim"
	tak "teko_game/pkg/tak"
	tko "teko_game/pkg/tko"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TurnStatus int32

const (
	TurnStatus_OK            TurnStatus = 0
	TurnStatus_INVALID_TURN  TurnStatus = 1
	TurnStatus_NOT_YOUR_TURN TurnStatus = 2
	TurnStatus_MATCH_OVER    TurnStatus = 3
)

var TurnStatus_name = map[int32]string{
	0: "OK",
	1: "INVALID_TURN",
	2: "NOT_YOUR_TURN",
	3: "MATCH_OVER",
}

var TurnStatus_value = map[string]int32{
	"OK":            0,
	"INVALID_TURN":  1,
	"NOT_YOUR_TURN": 2,
	"MATCH_OVER":    3,
}

func (x TurnStatus) String() string {
	return proto.EnumName(TurnStatus_name, int32(x))
}

func (TurnStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{0}
}

type GameStatus int32

const (
	GameStatus_YOUR_TURN         GameStatus = 0
	GameStatus_OPPONENTS_TURN    GameStatus = 1
	GameStatus_MATCH_WON         GameStatus = 3
	GameStatus_MATCH_LOST        GameStatus = 4
	GameStatus_DRAW              GameStatus = 5
	GameStatus_MATCH_NOT_STARTED GameStatus = 6
	GameStatus_MATCH_ABORTED     GameStatus = 7
)

var GameStatus_name = map[int32]string{
	0: "YOUR_TURN",
	1: "OPPONENTS_TURN",
	3: "MATCH_WON",
	4: "MATCH_LOST",
	5: "DRAW",
	6: "MATCH_NOT_STARTED",
	7: "MATCH_ABORTED",
}

var GameStatus_value = map[string]int32{
	"YOUR_TURN":         0,
	"OPPONENTS_TURN":    1,
	"MATCH_WON":         3,
	"MATCH_LOST":        4,
	"DRAW":              5,
	"MATCH_NOT_STARTED": 6,
	"MATCH_ABORTED":     7,
}

func (x GameStatus) String() string {
	return proto.EnumName(GameStatus_name, int32(x))
}

func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{1}
}

type SetPseudonymResponse_ErrorCode int32

const (
	SetPseudonymResponse_UNDEFINED_ERROR  SetPseudonymResponse_ErrorCode = 0
	SetPseudonymResponse_OK               SetPseudonymResponse_ErrorCode = 1
	SetPseudonymResponse_REQUEST_REJECTED SetPseudonymResponse_ErrorCode = 2
	SetPseudonymResponse_ALREADY_USED     SetPseudonymResponse_ErrorCode = 3
	SetPseudonymResponse_TOO_LONG         SetPseudonymResponse_ErrorCode = 4
	SetPseudonymResponse_EMPTY_FIELDS     SetPseudonymResponse_ErrorCode = 5
)

var SetPseudonymResponse_ErrorCode_name = map[int32]string{
	0: "UNDEFINED_ERROR",
	1: "OK",
	2: "REQUEST_REJECTED",
	3: "ALREADY_USED",
	4: "TOO_LONG",
	5: "EMPTY_FIELDS",
}

var SetPseudonymResponse_ErrorCode_value = map[string]int32{
	"UNDEFINED_ERROR":  0,
	"OK":               1,
	"REQUEST_REJECTED": 2,
	"ALREADY_USED":     3,
	"TOO_LONG":         4,
	"EMPTY_FIELDS":     5,
}

func (x SetPseudonymResponse_ErrorCode) String() string {
	return proto.EnumName(SetPseudonymResponse_ErrorCode_name, int32(x))
}

func (SetPseudonymResponse_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{5, 0}
}

type UserRegistrationResponse_ErrorCode int32

const (
	UserRegistrationResponse_UNDEFINED_ERROR   UserRegistrationResponse_ErrorCode = 0
	UserRegistrationResponse_OK                UserRegistrationResponse_ErrorCode = 1
	UserRegistrationResponse_INVALID_PARAMETER UserRegistrationResponse_ErrorCode = 2
	UserRegistrationResponse_EMPTY_FIELDS      UserRegistrationResponse_ErrorCode = 3
	UserRegistrationResponse_NOT_ALLOWED       UserRegistrationResponse_ErrorCode = 4
)

var UserRegistrationResponse_ErrorCode_name = map[int32]string{
	0: "UNDEFINED_ERROR",
	1: "OK",
	2: "INVALID_PARAMETER",
	3: "EMPTY_FIELDS",
	4: "NOT_ALLOWED",
}

var UserRegistrationResponse_ErrorCode_value = map[string]int32{
	"UNDEFINED_ERROR":   0,
	"OK":                1,
	"INVALID_PARAMETER": 2,
	"EMPTY_FIELDS":      3,
	"NOT_ALLOWED":       4,
}

func (x UserRegistrationResponse_ErrorCode) String() string {
	return proto.EnumName(UserRegistrationResponse_ErrorCode_name, int32(x))
}

func (UserRegistrationResponse_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{8, 0}
}

type GroupRegistrationResponse_ErrorCode int32

const (
	GroupRegistrationResponse_UNDEFINED_ERROR         GroupRegistrationResponse_ErrorCode = 0
	GroupRegistrationResponse_OK                      GroupRegistrationResponse_ErrorCode = 1
	GroupRegistrationResponse_UNKNOWN_USER            GroupRegistrationResponse_ErrorCode = 2
	GroupRegistrationResponse_TOO_MANY_GROUP_MEMBERS  GroupRegistrationResponse_ErrorCode = 3
	GroupRegistrationResponse_USER_ALREADY_REGISTERED GroupRegistrationResponse_ErrorCode = 4
	GroupRegistrationResponse_AUTH_FAILED             GroupRegistrationResponse_ErrorCode = 5
)

var GroupRegistrationResponse_ErrorCode_name = map[int32]string{
	0: "UNDEFINED_ERROR",
	1: "OK",
	2: "UNKNOWN_USER",
	3: "TOO_MANY_GROUP_MEMBERS",
	4: "USER_ALREADY_REGISTERED",
	5: "AUTH_FAILED",
}

var GroupRegistrationResponse_ErrorCode_value = map[string]int32{
	"UNDEFINED_ERROR":         0,
	"OK":                      1,
	"UNKNOWN_USER":            2,
	"TOO_MANY_GROUP_MEMBERS":  3,
	"USER_ALREADY_REGISTERED": 4,
	"AUTH_FAILED":             5,
}

func (x GroupRegistrationResponse_ErrorCode) String() string {
	return proto.EnumName(GroupRegistrationResponse_ErrorCode_name, int32(x))
}

func (GroupRegistrationResponse_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{10, 0}
}

type AuthPacket struct {
	MatrNumber           string   `protobuf:"bytes,1,opt,name=matr_number,json=matrNumber,proto3" json:"matr_number,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthPacket) Reset()         { *m = AuthPacket{} }
func (m *AuthPacket) String() string { return proto.CompactTextString(m) }
func (*AuthPacket) ProtoMessage()    {}
func (*AuthPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{0}
}

func (m *AuthPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthPacket.Unmarshal(m, b)
}
func (m *AuthPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthPacket.Marshal(b, m, deterministic)
}
func (m *AuthPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthPacket.Merge(m, src)
}
func (m *AuthPacket) XXX_Size() int {
	return xxx_messageInfo_AuthPacket.Size(m)
}
func (m *AuthPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthPacket.DiscardUnknown(m)
}

var xxx_messageInfo_AuthPacket proto.InternalMessageInfo

func (m *AuthPacket) GetMatrNumber() string {
	if m != nil {
		return m.MatrNumber
	}
	return ""
}

func (m *AuthPacket) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type MatchIDPacket struct {
	UserToken            string   `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	MatchToken           string   `protobuf:"bytes,2,opt,name=match_token,json=matchToken,proto3" json:"match_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchIDPacket) Reset()         { *m = MatchIDPacket{} }
func (m *MatchIDPacket) String() string { return proto.CompactTextString(m) }
func (*MatchIDPacket) ProtoMessage()    {}
func (*MatchIDPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{1}
}

func (m *MatchIDPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchIDPacket.Unmarshal(m, b)
}
func (m *MatchIDPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchIDPacket.Marshal(b, m, deterministic)
}
func (m *MatchIDPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchIDPacket.Merge(m, src)
}
func (m *MatchIDPacket) XXX_Size() int {
	return xxx_messageInfo_MatchIDPacket.Size(m)
}
func (m *MatchIDPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchIDPacket.DiscardUnknown(m)
}

var xxx_messageInfo_MatchIDPacket proto.InternalMessageInfo

func (m *MatchIDPacket) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *MatchIDPacket) GetMatchToken() string {
	if m != nil {
		return m.MatchToken
	}
	return ""
}

type IDPacket struct {
	UserToken            string   `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDPacket) Reset()         { *m = IDPacket{} }
func (m *IDPacket) String() string { return proto.CompactTextString(m) }
func (*IDPacket) ProtoMessage()    {}
func (*IDPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{2}
}

func (m *IDPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDPacket.Unmarshal(m, b)
}
func (m *IDPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDPacket.Marshal(b, m, deterministic)
}
func (m *IDPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDPacket.Merge(m, src)
}
func (m *IDPacket) XXX_Size() int {
	return xxx_messageInfo_IDPacket.Size(m)
}
func (m *IDPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_IDPacket.DiscardUnknown(m)
}

var xxx_messageInfo_IDPacket proto.InternalMessageInfo

func (m *IDPacket) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

type GetTimeoutResponse struct {
	TimeoutSeconds       uint32   `protobuf:"varint,1,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTimeoutResponse) Reset()         { *m = GetTimeoutResponse{} }
func (m *GetTimeoutResponse) String() string { return proto.CompactTextString(m) }
func (*GetTimeoutResponse) ProtoMessage()    {}
func (*GetTimeoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{3}
}

func (m *GetTimeoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTimeoutResponse.Unmarshal(m, b)
}
func (m *GetTimeoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTimeoutResponse.Marshal(b, m, deterministic)
}
func (m *GetTimeoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTimeoutResponse.Merge(m, src)
}
func (m *GetTimeoutResponse) XXX_Size() int {
	return xxx_messageInfo_GetTimeoutResponse.Size(m)
}
func (m *GetTimeoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTimeoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTimeoutResponse proto.InternalMessageInfo

func (m *GetTimeoutResponse) GetTimeoutSeconds() uint32 {
	if m != nil {
		return m.TimeoutSeconds
	}
	return 0
}

type SetPseudonymRequest struct {
	Auth                 *AuthPacket `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Pseudonym            string      `protobuf:"bytes,2,opt,name=pseudonym,proto3" json:"pseudonym,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetPseudonymRequest) Reset()         { *m = SetPseudonymRequest{} }
func (m *SetPseudonymRequest) String() string { return proto.CompactTextString(m) }
func (*SetPseudonymRequest) ProtoMessage()    {}
func (*SetPseudonymRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{4}
}

func (m *SetPseudonymRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPseudonymRequest.Unmarshal(m, b)
}
func (m *SetPseudonymRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPseudonymRequest.Marshal(b, m, deterministic)
}
func (m *SetPseudonymRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPseudonymRequest.Merge(m, src)
}
func (m *SetPseudonymRequest) XXX_Size() int {
	return xxx_messageInfo_SetPseudonymRequest.Size(m)
}
func (m *SetPseudonymRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPseudonymRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPseudonymRequest proto.InternalMessageInfo

func (m *SetPseudonymRequest) GetAuth() *AuthPacket {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *SetPseudonymRequest) GetPseudonym() string {
	if m != nil {
		return m.Pseudonym
	}
	return ""
}

type SetPseudonymResponse struct {
	ErrorCode            SetPseudonymResponse_ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=netcode.SetPseudonymResponse_ErrorCode" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *SetPseudonymResponse) Reset()         { *m = SetPseudonymResponse{} }
func (m *SetPseudonymResponse) String() string { return proto.CompactTextString(m) }
func (*SetPseudonymResponse) ProtoMessage()    {}
func (*SetPseudonymResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{5}
}

func (m *SetPseudonymResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPseudonymResponse.Unmarshal(m, b)
}
func (m *SetPseudonymResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPseudonymResponse.Marshal(b, m, deterministic)
}
func (m *SetPseudonymResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPseudonymResponse.Merge(m, src)
}
func (m *SetPseudonymResponse) XXX_Size() int {
	return xxx_messageInfo_SetPseudonymResponse.Size(m)
}
func (m *SetPseudonymResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPseudonymResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetPseudonymResponse proto.InternalMessageInfo

func (m *SetPseudonymResponse) GetErrorCode() SetPseudonymResponse_ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return SetPseudonymResponse_UNDEFINED_ERROR
}

type GetUserTokenResponse struct {
	UserToken            string   `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserTokenResponse) Reset()         { *m = GetUserTokenResponse{} }
func (m *GetUserTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserTokenResponse) ProtoMessage()    {}
func (*GetUserTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{6}
}

func (m *GetUserTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserTokenResponse.Unmarshal(m, b)
}
func (m *GetUserTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserTokenResponse.Marshal(b, m, deterministic)
}
func (m *GetUserTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserTokenResponse.Merge(m, src)
}
func (m *GetUserTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserTokenResponse.Size(m)
}
func (m *GetUserTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserTokenResponse proto.InternalMessageInfo

func (m *GetUserTokenResponse) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

type UserRegistrationRequest struct {
	Fullname             string   `protobuf:"bytes,1,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	MatrNumber           string   `protobuf:"bytes,3,opt,name=matr_number,json=matrNumber,proto3" json:"matr_number,omitempty"`
	Secret               string   `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRegistrationRequest) Reset()         { *m = UserRegistrationRequest{} }
func (m *UserRegistrationRequest) String() string { return proto.CompactTextString(m) }
func (*UserRegistrationRequest) ProtoMessage()    {}
func (*UserRegistrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{7}
}

func (m *UserRegistrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegistrationRequest.Unmarshal(m, b)
}
func (m *UserRegistrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegistrationRequest.Marshal(b, m, deterministic)
}
func (m *UserRegistrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegistrationRequest.Merge(m, src)
}
func (m *UserRegistrationRequest) XXX_Size() int {
	return xxx_messageInfo_UserRegistrationRequest.Size(m)
}
func (m *UserRegistrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegistrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegistrationRequest proto.InternalMessageInfo

func (m *UserRegistrationRequest) GetFullname() string {
	if m != nil {
		return m.Fullname
	}
	return ""
}

func (m *UserRegistrationRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserRegistrationRequest) GetMatrNumber() string {
	if m != nil {
		return m.MatrNumber
	}
	return ""
}

func (m *UserRegistrationRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type UserRegistrationResponse struct {
	ErrorCode            UserRegistrationResponse_ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=netcode.UserRegistrationResponse_ErrorCode" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *UserRegistrationResponse) Reset()         { *m = UserRegistrationResponse{} }
func (m *UserRegistrationResponse) String() string { return proto.CompactTextString(m) }
func (*UserRegistrationResponse) ProtoMessage()    {}
func (*UserRegistrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{8}
}

func (m *UserRegistrationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegistrationResponse.Unmarshal(m, b)
}
func (m *UserRegistrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegistrationResponse.Marshal(b, m, deterministic)
}
func (m *UserRegistrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegistrationResponse.Merge(m, src)
}
func (m *UserRegistrationResponse) XXX_Size() int {
	return xxx_messageInfo_UserRegistrationResponse.Size(m)
}
func (m *UserRegistrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegistrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegistrationResponse proto.InternalMessageInfo

func (m *UserRegistrationResponse) GetErrorCode() UserRegistrationResponse_ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return UserRegistrationResponse_UNDEFINED_ERROR
}

type GroupRegistrationRequest struct {
	Auth                 *AuthPacket `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	MatrNumber           []string    `protobuf:"bytes,2,rep,name=matr_number,json=matrNumber,proto3" json:"matr_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GroupRegistrationRequest) Reset()         { *m = GroupRegistrationRequest{} }
func (m *GroupRegistrationRequest) String() string { return proto.CompactTextString(m) }
func (*GroupRegistrationRequest) ProtoMessage()    {}
func (*GroupRegistrationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{9}
}

func (m *GroupRegistrationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRegistrationRequest.Unmarshal(m, b)
}
func (m *GroupRegistrationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRegistrationRequest.Marshal(b, m, deterministic)
}
func (m *GroupRegistrationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRegistrationRequest.Merge(m, src)
}
func (m *GroupRegistrationRequest) XXX_Size() int {
	return xxx_messageInfo_GroupRegistrationRequest.Size(m)
}
func (m *GroupRegistrationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRegistrationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRegistrationRequest proto.InternalMessageInfo

func (m *GroupRegistrationRequest) GetAuth() *AuthPacket {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *GroupRegistrationRequest) GetMatrNumber() []string {
	if m != nil {
		return m.MatrNumber
	}
	return nil
}

type GroupRegistrationResponse struct {
	ErrorCode            GroupRegistrationResponse_ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=netcode.GroupRegistrationResponse_ErrorCode" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GroupRegistrationResponse) Reset()         { *m = GroupRegistrationResponse{} }
func (m *GroupRegistrationResponse) String() string { return proto.CompactTextString(m) }
func (*GroupRegistrationResponse) ProtoMessage()    {}
func (*GroupRegistrationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{10}
}

func (m *GroupRegistrationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupRegistrationResponse.Unmarshal(m, b)
}
func (m *GroupRegistrationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupRegistrationResponse.Marshal(b, m, deterministic)
}
func (m *GroupRegistrationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupRegistrationResponse.Merge(m, src)
}
func (m *GroupRegistrationResponse) XXX_Size() int {
	return xxx_messageInfo_GroupRegistrationResponse.Size(m)
}
func (m *GroupRegistrationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupRegistrationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GroupRegistrationResponse proto.InternalMessageInfo

func (m *GroupRegistrationResponse) GetErrorCode() GroupRegistrationResponse_ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return GroupRegistrationResponse_UNDEFINED_ERROR
}

type DirectChallenge struct {
	UserPseudonym        string   `protobuf:"bytes,1,opt,name=user_pseudonym,json=userPseudonym,proto3" json:"user_pseudonym,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectChallenge) Reset()         { *m = DirectChallenge{} }
func (m *DirectChallenge) String() string { return proto.CompactTextString(m) }
func (*DirectChallenge) ProtoMessage()    {}
func (*DirectChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{11}
}

func (m *DirectChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectChallenge.Unmarshal(m, b)
}
func (m *DirectChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectChallenge.Marshal(b, m, deterministic)
}
func (m *DirectChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectChallenge.Merge(m, src)
}
func (m *DirectChallenge) XXX_Size() int {
	return xxx_messageInfo_DirectChallenge.Size(m)
}
func (m *DirectChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_DirectChallenge proto.InternalMessageInfo

func (m *DirectChallenge) GetUserPseudonym() string {
	if m != nil {
		return m.UserPseudonym
	}
	return ""
}

type MatchmakingParameter struct {
	// Types that are valid to be assigned to Parameter:
	//	*MatchmakingParameter_RandomIsDefault
	//	*MatchmakingParameter_DirectMatchmaking
	Parameter            isMatchmakingParameter_Parameter `protobuf_oneof:"parameter"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *MatchmakingParameter) Reset()         { *m = MatchmakingParameter{} }
func (m *MatchmakingParameter) String() string { return proto.CompactTextString(m) }
func (*MatchmakingParameter) ProtoMessage()    {}
func (*MatchmakingParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{12}
}

func (m *MatchmakingParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchmakingParameter.Unmarshal(m, b)
}
func (m *MatchmakingParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchmakingParameter.Marshal(b, m, deterministic)
}
func (m *MatchmakingParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchmakingParameter.Merge(m, src)
}
func (m *MatchmakingParameter) XXX_Size() int {
	return xxx_messageInfo_MatchmakingParameter.Size(m)
}
func (m *MatchmakingParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchmakingParameter.DiscardUnknown(m)
}

var xxx_messageInfo_MatchmakingParameter proto.InternalMessageInfo

type isMatchmakingParameter_Parameter interface {
	isMatchmakingParameter_Parameter()
}

type MatchmakingParameter_RandomIsDefault struct {
	RandomIsDefault *Nothing `protobuf:"bytes,10,opt,name=random_is_default,json=randomIsDefault,proto3,oneof"`
}

type MatchmakingParameter_DirectMatchmaking struct {
	DirectMatchmaking *DirectChallenge `protobuf:"bytes,11,opt,name=direct_matchmaking,json=directMatchmaking,proto3,oneof"`
}

func (*MatchmakingParameter_RandomIsDefault) isMatchmakingParameter_Parameter() {}

func (*MatchmakingParameter_DirectMatchmaking) isMatchmakingParameter_Parameter() {}

func (m *MatchmakingParameter) GetParameter() isMatchmakingParameter_Parameter {
	if m != nil {
		return m.Parameter
	}
	return nil
}

func (m *MatchmakingParameter) GetRandomIsDefault() *Nothing {
	if x, ok := m.GetParameter().(*MatchmakingParameter_RandomIsDefault); ok {
		return x.RandomIsDefault
	}
	return nil
}

func (m *MatchmakingParameter) GetDirectMatchmaking() *DirectChallenge {
	if x, ok := m.GetParameter().(*MatchmakingParameter_DirectMatchmaking); ok {
		return x.DirectMatchmaking
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MatchmakingParameter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MatchmakingParameter_RandomIsDefault)(nil),
		(*MatchmakingParameter_DirectMatchmaking)(nil),
	}
}

type MatchRequest struct {
	UserToken                string                `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	GameToken                string                `protobuf:"bytes,2,opt,name=game_token,json=gameToken,proto3" json:"game_token,omitempty"`
	MatchmakingParameters    *MatchmakingParameter `protobuf:"bytes,3,opt,name=matchmaking_parameters,json=matchmakingParameters,proto3" json:"matchmaking_parameters,omitempty"`
	TimeoutSuggestionSeconds uint32                `protobuf:"varint,4,opt,name=timeout_suggestion_seconds,json=timeoutSuggestionSeconds,proto3" json:"timeout_suggestion_seconds,omitempty"`
	// Types that are valid to be assigned to GameParameters:
	//	*MatchRequest_NimGameParameters
	//	*MatchRequest_DabGameParameters
	//	*MatchRequest_DomGameParameters
	//	*MatchRequest_DzoGameParameters
	//	*MatchRequest_TakGameParameters
	//	*MatchRequest_TkoGameParameters
	GameParameters       isMatchRequest_GameParameters `protobuf_oneof:"game_parameters"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *MatchRequest) Reset()         { *m = MatchRequest{} }
func (m *MatchRequest) String() string { return proto.CompactTextString(m) }
func (*MatchRequest) ProtoMessage()    {}
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{13}
}

func (m *MatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchRequest.Unmarshal(m, b)
}
func (m *MatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchRequest.Marshal(b, m, deterministic)
}
func (m *MatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchRequest.Merge(m, src)
}
func (m *MatchRequest) XXX_Size() int {
	return xxx_messageInfo_MatchRequest.Size(m)
}
func (m *MatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchRequest proto.InternalMessageInfo

func (m *MatchRequest) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

func (m *MatchRequest) GetGameToken() string {
	if m != nil {
		return m.GameToken
	}
	return ""
}

func (m *MatchRequest) GetMatchmakingParameters() *MatchmakingParameter {
	if m != nil {
		return m.MatchmakingParameters
	}
	return nil
}

func (m *MatchRequest) GetTimeoutSuggestionSeconds() uint32 {
	if m != nil {
		return m.TimeoutSuggestionSeconds
	}
	return 0
}

type isMatchRequest_GameParameters interface {
	isMatchRequest_GameParameters()
}

type MatchRequest_NimGameParameters struct {
	NimGameParameters *nim.GameParameter `protobuf:"bytes,10,opt,name=nim_game_parameters,json=nimGameParameters,proto3,oneof"`
}

type MatchRequest_DabGameParameters struct {
	DabGameParameters *dab.GameParameter `protobuf:"bytes,11,opt,name=dab_game_parameters,json=dabGameParameters,proto3,oneof"`
}

type MatchRequest_DomGameParameters struct {
	DomGameParameters *dom.GameParameter `protobuf:"bytes,12,opt,name=dom_game_parameters,json=domGameParameters,proto3,oneof"`
}

type MatchRequest_DzoGameParameters struct {
	DzoGameParameters *dozo.GameParameter `protobuf:"bytes,13,opt,name=dzo_game_parameters,json=dzoGameParameters,proto3,oneof"`
}

type MatchRequest_TakGameParameters struct {
	TakGameParameters *tak.GameParameter `protobuf:"bytes,14,opt,name=tak_game_parameters,json=takGameParameters,proto3,oneof"`
}

type MatchRequest_TkoGameParameters struct {
	TkoGameParameters *tko.GameParameter `protobuf:"bytes,15,opt,name=tko_game_parameters,json=tkoGameParameters,proto3,oneof"`
}

func (*MatchRequest_NimGameParameters) isMatchRequest_GameParameters() {}

func (*MatchRequest_DabGameParameters) isMatchRequest_GameParameters() {}

func (*MatchRequest_DomGameParameters) isMatchRequest_GameParameters() {}

func (*MatchRequest_DzoGameParameters) isMatchRequest_GameParameters() {}

func (*MatchRequest_TakGameParameters) isMatchRequest_GameParameters() {}

func (*MatchRequest_TkoGameParameters) isMatchRequest_GameParameters() {}

func (m *MatchRequest) GetGameParameters() isMatchRequest_GameParameters {
	if m != nil {
		return m.GameParameters
	}
	return nil
}

func (m *MatchRequest) GetNimGameParameters() *nim.GameParameter {
	if x, ok := m.GetGameParameters().(*MatchRequest_NimGameParameters); ok {
		return x.NimGameParameters
	}
	return nil
}

func (m *MatchRequest) GetDabGameParameters() *dab.GameParameter {
	if x, ok := m.GetGameParameters().(*MatchRequest_DabGameParameters); ok {
		return x.DabGameParameters
	}
	return nil
}

func (m *MatchRequest) GetDomGameParameters() *dom.GameParameter {
	if x, ok := m.GetGameParameters().(*MatchRequest_DomGameParameters); ok {
		return x.DomGameParameters
	}
	return nil
}

func (m *MatchRequest) GetDzoGameParameters() *dozo.GameParameter {
	if x, ok := m.GetGameParameters().(*MatchRequest_DzoGameParameters); ok {
		return x.DzoGameParameters
	}
	return nil
}

func (m *MatchRequest) GetTakGameParameters() *tak.GameParameter {
	if x, ok := m.GetGameParameters().(*MatchRequest_TakGameParameters); ok {
		return x.TakGameParameters
	}
	return nil
}

func (m *MatchRequest) GetTkoGameParameters() *tko.GameParameter {
	if x, ok := m.GetGameParameters().(*MatchRequest_TkoGameParameters); ok {
		return x.TkoGameParameters
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MatchRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MatchRequest_NimGameParameters)(nil),
		(*MatchRequest_DabGameParameters)(nil),
		(*MatchRequest_DomGameParameters)(nil),
		(*MatchRequest_DzoGameParameters)(nil),
		(*MatchRequest_TakGameParameters)(nil),
		(*MatchRequest_TkoGameParameters)(nil),
	}
}

type MatchResponse struct {
	MatchToken           string   `protobuf:"bytes,1,opt,name=match_token,json=matchToken,proto3" json:"match_token,omitempty"`
	BeginningPlayer      bool     `protobuf:"varint,2,opt,name=beginning_player,json=beginningPlayer,proto3" json:"beginning_player,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchResponse) Reset()         { *m = MatchResponse{} }
func (m *MatchResponse) String() string { return proto.CompactTextString(m) }
func (*MatchResponse) ProtoMessage()    {}
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{14}
}

func (m *MatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchResponse.Unmarshal(m, b)
}
func (m *MatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchResponse.Marshal(b, m, deterministic)
}
func (m *MatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchResponse.Merge(m, src)
}
func (m *MatchResponse) XXX_Size() int {
	return xxx_messageInfo_MatchResponse.Size(m)
}
func (m *MatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MatchResponse proto.InternalMessageInfo

func (m *MatchResponse) GetMatchToken() string {
	if m != nil {
		return m.MatchToken
	}
	return ""
}

func (m *MatchResponse) GetBeginningPlayer() bool {
	if m != nil {
		return m.BeginningPlayer
	}
	return false
}

type TurnRequest struct {
	MatchId *MatchIDPacket `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	// Types that are valid to be assigned to GameTurn:
	//	*TurnRequest_NimGameTurn
	//	*TurnRequest_DabGameTurn
	//	*TurnRequest_DomGameTurn
	//	*TurnRequest_DzoGameTurn
	//	*TurnRequest_TakGameTurn
	//	*TurnRequest_TkoGameTurn
	GameTurn             isTurnRequest_GameTurn `protobuf_oneof:"game_turn"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TurnRequest) Reset()         { *m = TurnRequest{} }
func (m *TurnRequest) String() string { return proto.CompactTextString(m) }
func (*TurnRequest) ProtoMessage()    {}
func (*TurnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{15}
}

func (m *TurnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TurnRequest.Unmarshal(m, b)
}
func (m *TurnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TurnRequest.Marshal(b, m, deterministic)
}
func (m *TurnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TurnRequest.Merge(m, src)
}
func (m *TurnRequest) XXX_Size() int {
	return xxx_messageInfo_TurnRequest.Size(m)
}
func (m *TurnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TurnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TurnRequest proto.InternalMessageInfo

func (m *TurnRequest) GetMatchId() *MatchIDPacket {
	if m != nil {
		return m.MatchId
	}
	return nil
}

type isTurnRequest_GameTurn interface {
	isTurnRequest_GameTurn()
}

type TurnRequest_NimGameTurn struct {
	NimGameTurn *nim.GameTurn `protobuf:"bytes,10,opt,name=nim_game_turn,json=nimGameTurn,proto3,oneof"`
}

type TurnRequest_DabGameTurn struct {
	DabGameTurn *dab.GameTurn `protobuf:"bytes,11,opt,name=dab_game_turn,json=dabGameTurn,proto3,oneof"`
}

type TurnRequest_DomGameTurn struct {
	DomGameTurn *dom.GameTurn `protobuf:"bytes,12,opt,name=dom_game_turn,json=domGameTurn,proto3,oneof"`
}

type TurnRequest_DzoGameTurn struct {
	DzoGameTurn *dozo.GameTurn `protobuf:"bytes,13,opt,name=dzo_game_turn,json=dzoGameTurn,proto3,oneof"`
}

type TurnRequest_TakGameTurn struct {
	TakGameTurn *tak.GameTurn `protobuf:"bytes,14,opt,name=tak_game_turn,json=takGameTurn,proto3,oneof"`
}

type TurnRequest_TkoGameTurn struct {
	TkoGameTurn *tko.GameTurn `protobuf:"bytes,15,opt,name=tko_game_turn,json=tkoGameTurn,proto3,oneof"`
}

func (*TurnRequest_NimGameTurn) isTurnRequest_GameTurn() {}

func (*TurnRequest_DabGameTurn) isTurnRequest_GameTurn() {}

func (*TurnRequest_DomGameTurn) isTurnRequest_GameTurn() {}

func (*TurnRequest_DzoGameTurn) isTurnRequest_GameTurn() {}

func (*TurnRequest_TakGameTurn) isTurnRequest_GameTurn() {}

func (*TurnRequest_TkoGameTurn) isTurnRequest_GameTurn() {}

func (m *TurnRequest) GetGameTurn() isTurnRequest_GameTurn {
	if m != nil {
		return m.GameTurn
	}
	return nil
}

func (m *TurnRequest) GetNimGameTurn() *nim.GameTurn {
	if x, ok := m.GetGameTurn().(*TurnRequest_NimGameTurn); ok {
		return x.NimGameTurn
	}
	return nil
}

func (m *TurnRequest) GetDabGameTurn() *dab.GameTurn {
	if x, ok := m.GetGameTurn().(*TurnRequest_DabGameTurn); ok {
		return x.DabGameTurn
	}
	return nil
}

func (m *TurnRequest) GetDomGameTurn() *dom.GameTurn {
	if x, ok := m.GetGameTurn().(*TurnRequest_DomGameTurn); ok {
		return x.DomGameTurn
	}
	return nil
}

func (m *TurnRequest) GetDzoGameTurn() *dozo.GameTurn {
	if x, ok := m.GetGameTurn().(*TurnRequest_DzoGameTurn); ok {
		return x.DzoGameTurn
	}
	return nil
}

func (m *TurnRequest) GetTakGameTurn() *tak.GameTurn {
	if x, ok := m.GetGameTurn().(*TurnRequest_TakGameTurn); ok {
		return x.TakGameTurn
	}
	return nil
}

func (m *TurnRequest) GetTkoGameTurn() *tko.GameTurn {
	if x, ok := m.GetGameTurn().(*TurnRequest_TkoGameTurn); ok {
		return x.TkoGameTurn
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TurnRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TurnRequest_NimGameTurn)(nil),
		(*TurnRequest_DabGameTurn)(nil),
		(*TurnRequest_DomGameTurn)(nil),
		(*TurnRequest_DzoGameTurn)(nil),
		(*TurnRequest_TakGameTurn)(nil),
		(*TurnRequest_TkoGameTurn)(nil),
	}
}

type TurnResponse struct {
	TurnStatus TurnStatus `protobuf:"varint,1,opt,name=turn_status,json=turnStatus,proto3,enum=netcode.TurnStatus" json:"turn_status,omitempty"`
	// Types that are valid to be assigned to GameState:
	//	*TurnResponse_NimGameState
	//	*TurnResponse_DabGameState
	//	*TurnResponse_DomGameState
	//	*TurnResponse_DzoGameState
	//	*TurnResponse_TakGameState
	//	*TurnResponse_TkoGameState
	GameState            isTurnResponse_GameState `protobuf_oneof:"game_state"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TurnResponse) Reset()         { *m = TurnResponse{} }
func (m *TurnResponse) String() string { return proto.CompactTextString(m) }
func (*TurnResponse) ProtoMessage()    {}
func (*TurnResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{16}
}

func (m *TurnResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TurnResponse.Unmarshal(m, b)
}
func (m *TurnResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TurnResponse.Marshal(b, m, deterministic)
}
func (m *TurnResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TurnResponse.Merge(m, src)
}
func (m *TurnResponse) XXX_Size() int {
	return xxx_messageInfo_TurnResponse.Size(m)
}
func (m *TurnResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TurnResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TurnResponse proto.InternalMessageInfo

func (m *TurnResponse) GetTurnStatus() TurnStatus {
	if m != nil {
		return m.TurnStatus
	}
	return TurnStatus_OK
}

type isTurnResponse_GameState interface {
	isTurnResponse_GameState()
}

type TurnResponse_NimGameState struct {
	NimGameState *nim.GameState `protobuf:"bytes,10,opt,name=nim_game_state,json=nimGameState,proto3,oneof"`
}

type TurnResponse_DabGameState struct {
	DabGameState *dab.GameState `protobuf:"bytes,11,opt,name=dab_game_state,json=dabGameState,proto3,oneof"`
}

type TurnResponse_DomGameState struct {
	DomGameState *dom.GameState `protobuf:"bytes,12,opt,name=dom_game_state,json=domGameState,proto3,oneof"`
}

type TurnResponse_DzoGameState struct {
	DzoGameState *dozo.GameState `protobuf:"bytes,13,opt,name=dzo_game_state,json=dzoGameState,proto3,oneof"`
}

type TurnResponse_TakGameState struct {
	TakGameState *tak.GameState `protobuf:"bytes,14,opt,name=tak_game_state,json=takGameState,proto3,oneof"`
}

type TurnResponse_TkoGameState struct {
	TkoGameState *tko.GameState `protobuf:"bytes,15,opt,name=tko_game_state,json=tkoGameState,proto3,oneof"`
}

func (*TurnResponse_NimGameState) isTurnResponse_GameState() {}

func (*TurnResponse_DabGameState) isTurnResponse_GameState() {}

func (*TurnResponse_DomGameState) isTurnResponse_GameState() {}

func (*TurnResponse_DzoGameState) isTurnResponse_GameState() {}

func (*TurnResponse_TakGameState) isTurnResponse_GameState() {}

func (*TurnResponse_TkoGameState) isTurnResponse_GameState() {}

func (m *TurnResponse) GetGameState() isTurnResponse_GameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

func (m *TurnResponse) GetNimGameState() *nim.GameState {
	if x, ok := m.GetGameState().(*TurnResponse_NimGameState); ok {
		return x.NimGameState
	}
	return nil
}

func (m *TurnResponse) GetDabGameState() *dab.GameState {
	if x, ok := m.GetGameState().(*TurnResponse_DabGameState); ok {
		return x.DabGameState
	}
	return nil
}

func (m *TurnResponse) GetDomGameState() *dom.GameState {
	if x, ok := m.GetGameState().(*TurnResponse_DomGameState); ok {
		return x.DomGameState
	}
	return nil
}

func (m *TurnResponse) GetDzoGameState() *dozo.GameState {
	if x, ok := m.GetGameState().(*TurnResponse_DzoGameState); ok {
		return x.DzoGameState
	}
	return nil
}

func (m *TurnResponse) GetTakGameState() *tak.GameState {
	if x, ok := m.GetGameState().(*TurnResponse_TakGameState); ok {
		return x.TakGameState
	}
	return nil
}

func (m *TurnResponse) GetTkoGameState() *tko.GameState {
	if x, ok := m.GetGameState().(*TurnResponse_TkoGameState); ok {
		return x.TkoGameState
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TurnResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TurnResponse_NimGameState)(nil),
		(*TurnResponse_DabGameState)(nil),
		(*TurnResponse_DomGameState)(nil),
		(*TurnResponse_DzoGameState)(nil),
		(*TurnResponse_TakGameState)(nil),
		(*TurnResponse_TkoGameState)(nil),
	}
}

type GameStateResponse struct {
	GameStatus      GameStatus `protobuf:"varint,1,opt,name=game_status,json=gameStatus,proto3,enum=netcode.GameStatus" json:"game_status,omitempty"`
	BeginningPlayer bool       `protobuf:"varint,2,opt,name=beginning_player,json=beginningPlayer,proto3" json:"beginning_player,omitempty"`
	// Types that are valid to be assigned to GameState:
	//	*GameStateResponse_NimGameState
	//	*GameStateResponse_DabGameState
	//	*GameStateResponse_DomGameState
	//	*GameStateResponse_DzoGameState
	//	*GameStateResponse_TakGameState
	//	*GameStateResponse_TkoGameState
	GameState            isGameStateResponse_GameState `protobuf_oneof:"game_state"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GameStateResponse) Reset()         { *m = GameStateResponse{} }
func (m *GameStateResponse) String() string { return proto.CompactTextString(m) }
func (*GameStateResponse) ProtoMessage()    {}
func (*GameStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{17}
}

func (m *GameStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameStateResponse.Unmarshal(m, b)
}
func (m *GameStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameStateResponse.Marshal(b, m, deterministic)
}
func (m *GameStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameStateResponse.Merge(m, src)
}
func (m *GameStateResponse) XXX_Size() int {
	return xxx_messageInfo_GameStateResponse.Size(m)
}
func (m *GameStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameStateResponse proto.InternalMessageInfo

func (m *GameStateResponse) GetGameStatus() GameStatus {
	if m != nil {
		return m.GameStatus
	}
	return GameStatus_YOUR_TURN
}

func (m *GameStateResponse) GetBeginningPlayer() bool {
	if m != nil {
		return m.BeginningPlayer
	}
	return false
}

type isGameStateResponse_GameState interface {
	isGameStateResponse_GameState()
}

type GameStateResponse_NimGameState struct {
	NimGameState *nim.GameState `protobuf:"bytes,10,opt,name=nim_game_state,json=nimGameState,proto3,oneof"`
}

type GameStateResponse_DabGameState struct {
	DabGameState *dab.GameState `protobuf:"bytes,11,opt,name=dab_game_state,json=dabGameState,proto3,oneof"`
}

type GameStateResponse_DomGameState struct {
	DomGameState *dom.GameState `protobuf:"bytes,12,opt,name=dom_game_state,json=domGameState,proto3,oneof"`
}

type GameStateResponse_DzoGameState struct {
	DzoGameState *dozo.GameState `protobuf:"bytes,13,opt,name=dzo_game_state,json=dzoGameState,proto3,oneof"`
}

type GameStateResponse_TakGameState struct {
	TakGameState *tak.GameState `protobuf:"bytes,14,opt,name=tak_game_state,json=takGameState,proto3,oneof"`
}

type GameStateResponse_TkoGameState struct {
	TkoGameState *tko.GameState `protobuf:"bytes,15,opt,name=tko_game_state,json=tkoGameState,proto3,oneof"`
}

func (*GameStateResponse_NimGameState) isGameStateResponse_GameState() {}

func (*GameStateResponse_DabGameState) isGameStateResponse_GameState() {}

func (*GameStateResponse_DomGameState) isGameStateResponse_GameState() {}

func (*GameStateResponse_DzoGameState) isGameStateResponse_GameState() {}

func (*GameStateResponse_TakGameState) isGameStateResponse_GameState() {}

func (*GameStateResponse_TkoGameState) isGameStateResponse_GameState() {}

func (m *GameStateResponse) GetGameState() isGameStateResponse_GameState {
	if m != nil {
		return m.GameState
	}
	return nil
}

func (m *GameStateResponse) GetNimGameState() *nim.GameState {
	if x, ok := m.GetGameState().(*GameStateResponse_NimGameState); ok {
		return x.NimGameState
	}
	return nil
}

func (m *GameStateResponse) GetDabGameState() *dab.GameState {
	if x, ok := m.GetGameState().(*GameStateResponse_DabGameState); ok {
		return x.DabGameState
	}
	return nil
}

func (m *GameStateResponse) GetDomGameState() *dom.GameState {
	if x, ok := m.GetGameState().(*GameStateResponse_DomGameState); ok {
		return x.DomGameState
	}
	return nil
}

func (m *GameStateResponse) GetDzoGameState() *dozo.GameState {
	if x, ok := m.GetGameState().(*GameStateResponse_DzoGameState); ok {
		return x.DzoGameState
	}
	return nil
}

func (m *GameStateResponse) GetTakGameState() *tak.GameState {
	if x, ok := m.GetGameState().(*GameStateResponse_TakGameState); ok {
		return x.TakGameState
	}
	return nil
}

func (m *GameStateResponse) GetTkoGameState() *tko.GameState {
	if x, ok := m.GetGameState().(*GameStateResponse_TkoGameState); ok {
		return x.TkoGameState
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GameStateResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GameStateResponse_NimGameState)(nil),
		(*GameStateResponse_DabGameState)(nil),
		(*GameStateResponse_DomGameState)(nil),
		(*GameStateResponse_DzoGameState)(nil),
		(*GameStateResponse_TakGameState)(nil),
		(*GameStateResponse_TkoGameState)(nil),
	}
}

type EloValues struct {
	UserElo              float64  `protobuf:"fixed64,1,opt,name=user_elo,json=userElo,proto3" json:"user_elo,omitempty"`
	GroupElo             float64  `protobuf:"fixed64,2,opt,name=group_elo,json=groupElo,proto3" json:"group_elo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EloValues) Reset()         { *m = EloValues{} }
func (m *EloValues) String() string { return proto.CompactTextString(m) }
func (*EloValues) ProtoMessage()    {}
func (*EloValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{18}
}

func (m *EloValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EloValues.Unmarshal(m, b)
}
func (m *EloValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EloValues.Marshal(b, m, deterministic)
}
func (m *EloValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EloValues.Merge(m, src)
}
func (m *EloValues) XXX_Size() int {
	return xxx_messageInfo_EloValues.Size(m)
}
func (m *EloValues) XXX_DiscardUnknown() {
	xxx_messageInfo_EloValues.DiscardUnknown(m)
}

var xxx_messageInfo_EloValues proto.InternalMessageInfo

func (m *EloValues) GetUserElo() float64 {
	if m != nil {
		return m.UserElo
	}
	return 0
}

func (m *EloValues) GetGroupElo() float64 {
	if m != nil {
		return m.GroupElo
	}
	return 0
}

type OpponentInfoResponse struct {
	UserPseudonym        string     `protobuf:"bytes,1,opt,name=user_pseudonym,json=userPseudonym,proto3" json:"user_pseudonym,omitempty"`
	GroupPseudonym       string     `protobuf:"bytes,2,opt,name=group_pseudonym,json=groupPseudonym,proto3" json:"group_pseudonym,omitempty"`
	Elo                  *EloValues `protobuf:"bytes,3,opt,name=elo,proto3" json:"elo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OpponentInfoResponse) Reset()         { *m = OpponentInfoResponse{} }
func (m *OpponentInfoResponse) String() string { return proto.CompactTextString(m) }
func (*OpponentInfoResponse) ProtoMessage()    {}
func (*OpponentInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{19}
}

func (m *OpponentInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpponentInfoResponse.Unmarshal(m, b)
}
func (m *OpponentInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpponentInfoResponse.Marshal(b, m, deterministic)
}
func (m *OpponentInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpponentInfoResponse.Merge(m, src)
}
func (m *OpponentInfoResponse) XXX_Size() int {
	return xxx_messageInfo_OpponentInfoResponse.Size(m)
}
func (m *OpponentInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpponentInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpponentInfoResponse proto.InternalMessageInfo

func (m *OpponentInfoResponse) GetUserPseudonym() string {
	if m != nil {
		return m.UserPseudonym
	}
	return ""
}

func (m *OpponentInfoResponse) GetGroupPseudonym() string {
	if m != nil {
		return m.GroupPseudonym
	}
	return ""
}

func (m *OpponentInfoResponse) GetElo() *EloValues {
	if m != nil {
		return m.Elo
	}
	return nil
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_49314ab961cc3a33, []int{20}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("netcode.TurnStatus", TurnStatus_name, TurnStatus_value)
	proto.RegisterEnum("netcode.GameStatus", GameStatus_name, GameStatus_value)
	proto.RegisterEnum("netcode.SetPseudonymResponse_ErrorCode", SetPseudonymResponse_ErrorCode_name, SetPseudonymResponse_ErrorCode_value)
	proto.RegisterEnum("netcode.UserRegistrationResponse_ErrorCode", UserRegistrationResponse_ErrorCode_name, UserRegistrationResponse_ErrorCode_value)
	proto.RegisterEnum("netcode.GroupRegistrationResponse_ErrorCode", GroupRegistrationResponse_ErrorCode_name, GroupRegistrationResponse_ErrorCode_value)
	proto.RegisterType((*AuthPacket)(nil), "netcode.AuthPacket")
	proto.RegisterType((*MatchIDPacket)(nil), "netcode.MatchIDPacket")
	proto.RegisterType((*IDPacket)(nil), "netcode.IDPacket")
	proto.RegisterType((*GetTimeoutResponse)(nil), "netcode.GetTimeoutResponse")
	proto.RegisterType((*SetPseudonymRequest)(nil), "netcode.SetPseudonymRequest")
	proto.RegisterType((*SetPseudonymResponse)(nil), "netcode.SetPseudonymResponse")
	proto.RegisterType((*GetUserTokenResponse)(nil), "netcode.GetUserTokenResponse")
	proto.RegisterType((*UserRegistrationRequest)(nil), "netcode.UserRegistrationRequest")
	proto.RegisterType((*UserRegistrationResponse)(nil), "netcode.UserRegistrationResponse")
	proto.RegisterType((*GroupRegistrationRequest)(nil), "netcode.GroupRegistrationRequest")
	proto.RegisterType((*GroupRegistrationResponse)(nil), "netcode.GroupRegistrationResponse")
	proto.RegisterType((*DirectChallenge)(nil), "netcode.DirectChallenge")
	proto.RegisterType((*MatchmakingParameter)(nil), "netcode.MatchmakingParameter")
	proto.RegisterType((*MatchRequest)(nil), "netcode.MatchRequest")
	proto.RegisterType((*MatchResponse)(nil), "netcode.MatchResponse")
	proto.RegisterType((*TurnRequest)(nil), "netcode.TurnRequest")
	proto.RegisterType((*TurnResponse)(nil), "netcode.TurnResponse")
	proto.RegisterType((*GameStateResponse)(nil), "netcode.GameStateResponse")
	proto.RegisterType((*EloValues)(nil), "netcode.EloValues")
	proto.RegisterType((*OpponentInfoResponse)(nil), "netcode.OpponentInfoResponse")
	proto.RegisterType((*Nothing)(nil), "netcode.Nothing")
}

func init() {
	proto.RegisterFile("netcode.proto", fileDescriptor_49314ab961cc3a33)
}

var fileDescriptor_49314ab961cc3a33 = []byte{
	// 1705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xdd, 0x6e, 0xdb, 0xc8,
	0x15, 0xb6, 0x2c, 0xff, 0x48, 0x47, 0x7f, 0xd4, 0xc4, 0x76, 0xbc, 0xce, 0x06, 0xcd, 0x12, 0x2d,
	0xb2, 0xbb, 0xed, 0x26, 0x68, 0xb6, 0x5d, 0x74, 0x81, 0xb6, 0x80, 0x6c, 0x31, 0xb2, 0x36, 0x36,
	0xa9, 0x8e, 0xa8, 0x18, 0xd9, 0x16, 0x20, 0x28, 0x71, 0x22, 0x0b, 0x12, 0x39, 0x2a, 0x39, 0x44,
	0xbb, 0xb9, 0x2c, 0x72, 0xd7, 0xde, 0xf7, 0xbe, 0x0f, 0xd0, 0x07, 0xe9, 0x55, 0x51, 0xa0, 0xcf,
	0xd1, 0x57, 0x28, 0x66, 0x38, 0x33, 0xb4, 0x24, 0x3a, 0x76, 0x81, 0xf6, 0xae, 0x77, 0x9c, 0x33,
	0xf3, 0x7d, 0xe7, 0xf0, 0x9c, 0x8f, 0x67, 0x66, 0x08, 0x8d, 0x88, 0xb0, 0x09, 0x0d, 0xc8, 0xb3,
	0x65, 0x4c, 0x19, 0x45, 0xfb, 0x72, 0x78, 0x52, 0x8d, 0x66, 0x61, 0x66, 0x3b, 0x39, 0x08, 0x28,
	0x4b, 0xbe, 0xf0, 0xa3, 0xe0, 0x8b, 0x31, 0xfd, 0x3d, 0x49, 0xa4, 0xb5, 0x19, 0xd0, 0x70, 0x16,
	0x91, 0x09, 0x93, 0x63, 0x08, 0xe8, 0x3b, 0x2a, 0x9f, 0xab, 0xcc, 0x9f, 0xeb, 0xc7, 0xb9, 0xb4,
	0x9a, 0x16, 0x40, 0x27, 0x65, 0xd7, 0x03, 0x7f, 0x32, 0x27, 0x0c, 0x7d, 0x0f, 0x6a, 0xa1, 0xcf,
	0x62, 0x2f, 0x4a, 0xc3, 0x31, 0x89, 0x8f, 0x4b, 0x4f, 0x4a, 0x9f, 0x56, 0x31, 0x70, 0x93, 0x2d,
	0x2c, 0xe8, 0x08, 0xf6, 0x12, 0x32, 0x89, 0x09, 0x3b, 0xde, 0x16, 0x73, 0x72, 0x64, 0x3a, 0xd0,
	0xb8, 0xf4, 0xd9, 0xe4, 0xba, 0xdf, 0x95, 0x4c, 0x8f, 0x01, 0xd2, 0x84, 0xc4, 0x1e, 0xa3, 0x73,
	0x12, 0x49, 0xa2, 0x2a, 0xb7, 0xb8, 0xdc, 0x20, 0x1d, 0x4d, 0xae, 0xe5, 0xfc, 0xb6, 0x76, 0x34,
	0xb9, 0x16, 0x0b, 0xcc, 0xcf, 0xa0, 0x72, 0x4f, 0x2e, 0xf3, 0x17, 0x80, 0x7a, 0x84, 0xb9, 0xb3,
	0x90, 0xd0, 0x94, 0x61, 0x92, 0x2c, 0x69, 0x94, 0x10, 0xf4, 0x14, 0x5a, 0x2c, 0x33, 0x79, 0x09,
	0x99, 0xd0, 0x28, 0x48, 0x04, 0xb2, 0x81, 0x9b, 0xd2, 0x3c, 0xcc, 0xac, 0xe6, 0x6f, 0xe0, 0xc1,
	0x90, 0xb0, 0x41, 0x42, 0xd2, 0x80, 0x46, 0xdf, 0x85, 0x98, 0xfc, 0x36, 0x25, 0x09, 0x43, 0x4f,
	0x61, 0xc7, 0x4f, 0xd9, 0xb5, 0x00, 0xd5, 0x5e, 0x3c, 0x78, 0xa6, 0x4a, 0x92, 0x67, 0x0b, 0x8b,
	0x05, 0xe8, 0x63, 0xa8, 0x2e, 0x15, 0x58, 0xbe, 0x48, 0x6e, 0x30, 0xff, 0x5e, 0x82, 0x83, 0x55,
	0x7a, 0x19, 0xdf, 0x4b, 0x00, 0x12, 0xc7, 0x34, 0xf6, 0x38, 0xab, 0xf0, 0xd2, 0x7c, 0xf1, 0x54,
	0x7b, 0x29, 0x82, 0x3c, 0xb3, 0xf8, 0xfa, 0x33, 0x1a, 0x10, 0x5c, 0x25, 0xea, 0xd1, 0x5c, 0x42,
	0x55, 0xdb, 0xd1, 0x03, 0x68, 0x8d, 0xec, 0xae, 0xf5, 0xb2, 0x6f, 0x5b, 0x5d, 0xcf, 0xc2, 0xd8,
	0xc1, 0xc6, 0x16, 0xda, 0x83, 0x6d, 0xe7, 0x95, 0x51, 0x42, 0x07, 0x60, 0x60, 0xeb, 0x57, 0x23,
	0x6b, 0xe8, 0x7a, 0xd8, 0xfa, 0xc6, 0x3a, 0x73, 0xad, 0xae, 0xb1, 0x8d, 0x0c, 0xa8, 0x77, 0x2e,
	0xb0, 0xd5, 0xe9, 0xbe, 0xf1, 0x46, 0x43, 0xab, 0x6b, 0x94, 0x51, 0x1d, 0x2a, 0xae, 0xe3, 0x78,
	0x17, 0x8e, 0xdd, 0x33, 0x76, 0xf8, 0xbc, 0x75, 0x39, 0x70, 0xdf, 0x78, 0x2f, 0xfb, 0xd6, 0x45,
	0x77, 0x68, 0xec, 0x9a, 0x3f, 0x85, 0x83, 0x1e, 0x61, 0x23, 0x95, 0x7f, 0xfd, 0x46, 0x77, 0x94,
	0xe9, 0x7d, 0x09, 0x1e, 0x72, 0x10, 0x26, 0xd3, 0x59, 0xc2, 0x62, 0x9f, 0xcd, 0x68, 0xa4, 0x92,
	0x7d, 0x02, 0x95, 0xb7, 0xe9, 0x62, 0x11, 0xf9, 0x21, 0x91, 0x40, 0x3d, 0x46, 0x07, 0xb0, 0x4b,
	0x42, 0x7f, 0xb6, 0x90, 0xb9, 0xcd, 0x06, 0xeb, 0x4a, 0x2d, 0x7f, 0x40, 0xa9, 0x3b, 0x2b, 0x4a,
	0xfd, 0x5b, 0x09, 0x8e, 0x37, 0xc3, 0x90, 0xaf, 0xf0, 0x4d, 0x41, 0x51, 0x7e, 0xa8, 0x8b, 0x72,
	0x1b, 0xac, 0xb8, 0x30, 0xe3, 0x7b, 0x17, 0xe6, 0x10, 0xda, 0x7d, 0xfb, 0x75, 0xe7, 0xa2, 0xdf,
	0xf5, 0x06, 0x1d, 0xdc, 0xb9, 0xb4, 0x5c, 0x0b, 0x67, 0x95, 0x59, 0xc9, 0x7c, 0x19, 0xb5, 0xa0,
	0x66, 0x3b, 0xae, 0xd7, 0xb9, 0xb8, 0x70, 0xae, 0xac, 0xae, 0xb1, 0x63, 0x06, 0x70, 0xdc, 0x8b,
	0x69, 0xba, 0x2c, 0xca, 0xe9, 0xbd, 0x05, 0xbc, 0x96, 0xca, 0xed, 0x27, 0xe5, 0xd5, 0x54, 0x9a,
	0xff, 0x2a, 0xc1, 0x47, 0x05, 0x6e, 0x64, 0xce, 0x5e, 0x15, 0xe4, 0xec, 0x47, 0xda, 0xdb, 0xad,
	0xb8, 0xe2, 0xa4, 0xbd, 0x2f, 0xdd, 0x3b, 0x6b, 0x06, 0xd4, 0x47, 0xf6, 0x2b, 0xdb, 0xb9, 0xb2,
	0xb9, 0x70, 0x79, 0xc2, 0x4e, 0xe0, 0x88, 0x0b, 0xf7, 0xb2, 0x63, 0xbf, 0xf1, 0x7a, 0xd8, 0x19,
	0x0d, 0xbc, 0x4b, 0xeb, 0xf2, 0xd4, 0xc2, 0x3c, 0x75, 0x8f, 0xe0, 0x21, 0x5f, 0xe5, 0x29, 0xad,
	0x63, 0xab, 0xd7, 0x1f, 0xba, 0x16, 0xe6, 0x69, 0xe4, 0x79, 0xed, 0x8c, 0xdc, 0x73, 0xef, 0x65,
	0xa7, 0x7f, 0x61, 0x75, 0x8d, 0x5d, 0xf3, 0x67, 0xd0, 0xea, 0xce, 0x62, 0x32, 0x61, 0x67, 0xd7,
	0xfe, 0x62, 0x41, 0xa2, 0x29, 0x41, 0x3f, 0x80, 0xa6, 0x50, 0x77, 0xfe, 0xad, 0x67, 0x42, 0x6d,
	0x70, 0xab, 0xfe, 0x56, 0xcd, 0xbf, 0x96, 0xe0, 0x40, 0x74, 0xc2, 0xd0, 0x9f, 0xcf, 0xa2, 0xe9,
	0xc0, 0x8f, 0xfd, 0x90, 0x30, 0x12, 0xa3, 0x5f, 0x42, 0x3b, 0xf6, 0xa3, 0x80, 0x86, 0xde, 0x2c,
	0xf1, 0x02, 0xf2, 0xd6, 0x4f, 0x17, 0xec, 0x18, 0x44, 0x6d, 0x0c, 0x9d, 0x2d, 0x9b, 0xb2, 0xeb,
	0x59, 0x34, 0x3d, 0xdf, 0xc2, 0xad, 0x6c, 0x71, 0x3f, 0xe9, 0x66, 0x4b, 0x51, 0x1f, 0x50, 0x20,
	0x42, 0xf2, 0xc2, 0x9c, 0xfe, 0xb8, 0x26, 0x08, 0x8e, 0x35, 0xc1, 0x5a, 0xd4, 0xe7, 0x5b, 0xb8,
	0x9d, 0xa1, 0x6e, 0xc4, 0x74, 0x5a, 0x83, 0xea, 0x52, 0xc5, 0x65, 0xfe, 0x79, 0x17, 0xea, 0x62,
	0x52, 0xe9, 0xe6, 0x8e, 0xce, 0xfd, 0x18, 0x60, 0xea, 0x87, 0x64, 0xa5, 0x71, 0x57, 0xb9, 0x25,
	0x9b, 0x76, 0xe1, 0xe8, 0x46, 0x7c, 0x9e, 0xf6, 0x93, 0x88, 0x4f, 0xb4, 0xf6, 0xe2, 0xb1, 0x0e,
	0xb5, 0x28, 0x4b, 0xf8, 0x30, 0x2c, 0xb0, 0x26, 0xe8, 0xe7, 0x70, 0xa2, 0x9b, 0x79, 0x3a, 0x9d,
	0x92, 0x84, 0x2b, 0x49, 0xf7, 0xf5, 0x1d, 0xd1, 0xd7, 0x8f, 0x55, 0x5f, 0xd7, 0x0b, 0x64, 0x87,
	0x47, 0x5d, 0x78, 0x10, 0xcd, 0x42, 0x4f, 0x84, 0x7d, 0x23, 0xa0, 0x2c, 0xf9, 0xe8, 0x19, 0xdf,
	0x54, 0x7b, 0x7e, 0x48, 0xb4, 0x3f, 0x9e, 0xb5, 0x68, 0x16, 0xae, 0xd8, 0x04, 0x4b, 0xe0, 0x8f,
	0x37, 0x58, 0x6a, 0x92, 0x25, 0xf0, 0xc7, 0x9b, 0x2c, 0x81, 0x3f, 0x2e, 0x60, 0xa1, 0x9b, 0xb1,
	0xd4, 0x15, 0x0b, 0x2d, 0x88, 0x25, 0xa0, 0x45, 0xb1, 0xbc, 0xa3, 0x1b, 0x2c, 0x0d, 0xc5, 0xf2,
	0x8e, 0x16, 0xb0, 0xbc, 0xa3, 0x9b, 0x2c, 0xcc, 0x9f, 0x6f, 0xb0, 0x34, 0x25, 0x0b, 0x3f, 0x2f,
	0x6c, 0xb0, 0x30, 0x7f, 0x5e, 0xc0, 0x32, 0xdf, 0x8c, 0xa5, 0xa5, 0x58, 0xe6, 0x05, 0xb1, 0xb0,
	0xf9, 0x5a, 0x2c, 0xa7, 0x6d, 0x68, 0xad, 0x31, 0x98, 0xbf, 0x96, 0x67, 0x0a, 0xdd, 0x69, 0xd6,
	0x0e, 0x0d, 0xa5, 0xf5, 0x43, 0x03, 0xfa, 0x0c, 0x8c, 0x31, 0x99, 0xce, 0xa2, 0x48, 0x48, 0x6f,
	0xe1, 0x7f, 0x27, 0xda, 0x59, 0xe9, 0xd3, 0x0a, 0x6e, 0x69, 0xfb, 0x40, 0x98, 0xcd, 0x3f, 0x96,
	0xa1, 0xe6, 0xa6, 0xb1, 0xee, 0x96, 0x3f, 0x86, 0x4a, 0xc6, 0x3d, 0x0b, 0x64, 0xc7, 0x3c, 0x5a,
	0x55, 0xaa, 0x3a, 0x8d, 0xe0, 0x7d, 0xb1, 0xae, 0x1f, 0xa0, 0x2f, 0xa1, 0xa1, 0x65, 0xc5, 0xd2,
	0x38, 0x92, 0x82, 0x6a, 0x68, 0x41, 0x71, 0xfe, 0xf3, 0x2d, 0x5c, 0x93, 0x5a, 0xe2, 0x43, 0x0e,
	0xd2, 0x2a, 0x12, 0xa0, 0x9a, 0x04, 0x29, 0xfd, 0x28, 0x90, 0x94, 0x8e, 0x06, 0xd1, 0x9b, 0x9e,
	0xea, 0x0a, 0x44, 0x57, 0x3d, 0x49, 0xa5, 0x68, 0x90, 0xd2, 0x88, 0x00, 0x35, 0x14, 0x48, 0xaa,
	0x43, 0x83, 0x32, 0x61, 0x28, 0x90, 0x96, 0x84, 0x00, 0x35, 0x25, 0x48, 0x89, 0x41, 0x81, 0xa4,
	0x0e, 0x34, 0x68, 0x7e, 0xd3, 0x53, 0x4b, 0x81, 0xe6, 0xab, 0x9e, 0x64, 0xd9, 0xf9, 0x90, 0x37,
	0x21, 0x0d, 0x30, 0xff, 0x52, 0x86, 0x7a, 0x56, 0x0d, 0x59, 0xea, 0x9f, 0x40, 0x8d, 0x4f, 0x78,
	0x09, 0xf3, 0x59, 0x9a, 0xc8, 0x5d, 0x25, 0xdf, 0xc3, 0xf8, 0xda, 0xa1, 0x98, 0xc2, 0xc0, 0xf4,
	0x33, 0xfa, 0x0a, 0x9a, 0xba, 0x22, 0x1c, 0x49, 0x64, 0x49, 0x9a, 0xba, 0x24, 0x7c, 0x21, 0xef,
	0x8a, 0x75, 0x59, 0x13, 0x31, 0xe6, 0x38, 0x5d, 0x94, 0x0c, 0x57, 0x93, 0x38, 0x55, 0x15, 0x8d,
	0x93, 0x65, 0xc9, 0x71, 0x74, 0xc5, 0x5f, 0x5d, 0xe1, 0xe8, 0x9a, 0x3f, 0x59, 0x99, 0x1c, 0xa7,
	0x4a, 0x93, 0xe1, 0x1a, 0x0a, 0x27, 0x6b, 0x93, 0xe3, 0xb2, 0xe2, 0x68, 0x9c, 0xae, 0x4e, 0x86,
	0x6b, 0x4a, 0x9c, 0x2a, 0x8f, 0xc6, 0xc9, 0xfa, 0xe4, 0xb8, 0xf9, 0x8a, 0xbf, 0x96, 0xc2, 0xcd,
	0xd7, 0xfc, 0xc9, 0x12, 0x89, 0xf1, 0x69, 0x5d, 0xf6, 0x7a, 0x81, 0x31, 0xff, 0x51, 0x86, 0xb6,
	0x9e, 0xbb, 0x59, 0x29, 0xbd, 0xa6, 0xa0, 0x52, 0x0a, 0xc0, 0x2b, 0x35, 0xd5, 0xcf, 0xff, 0xc1,
	0x97, 0xfa, 0xff, 0xa2, 0xfe, 0x4f, 0x8b, 0x7a, 0x06, 0x55, 0x6b, 0x41, 0x5f, 0xfb, 0x8b, 0x94,
	0x24, 0xe8, 0x23, 0xa8, 0x88, 0xad, 0x9f, 0x2c, 0xa8, 0x28, 0x64, 0x09, 0xef, 0xf3, 0xb1, 0xb5,
	0xa0, 0xe8, 0x11, 0x54, 0xa7, 0xfc, 0x28, 0x27, 0xe6, 0xb6, 0xc5, 0x5c, 0x45, 0x18, 0xac, 0x05,
	0x35, 0xff, 0x54, 0x82, 0x03, 0x67, 0xb9, 0xa4, 0x11, 0x89, 0x58, 0x3f, 0x7a, 0x4b, 0xb5, 0x38,
	0xee, 0x77, 0x68, 0xe2, 0x77, 0xb5, 0x8c, 0x7c, 0xfd, 0x22, 0xd5, 0x14, 0xe6, 0x7c, 0xe1, 0xf7,
	0xa1, 0xcc, 0xfd, 0x97, 0xd5, 0xce, 0x2d, 0x45, 0xa6, 0xdf, 0x00, 0xf3, 0x69, 0xb3, 0x0a, 0xfb,
	0xf2, 0x20, 0xf5, 0x79, 0x1f, 0x20, 0xef, 0x15, 0xf2, 0xe8, 0xb8, 0xc5, 0x8f, 0x8e, 0xea, 0xc0,
	0xed, 0x8e, 0xb0, 0x6d, 0x94, 0x50, 0x1b, 0x1a, 0xfc, 0x64, 0xfd, 0xc6, 0x19, 0xe1, 0xcc, 0xb4,
	0x8d, 0x9a, 0x00, 0x97, 0x1d, 0xf7, 0xec, 0xdc, 0x73, 0x5e, 0x5b, 0xd8, 0x28, 0x7f, 0xfe, 0x87,
	0x12, 0x40, 0xae, 0x66, 0xd4, 0x80, 0x6a, 0xbe, 0x7a, 0x0b, 0x21, 0x68, 0x3a, 0x83, 0x81, 0x63,
	0x5b, 0xb6, 0x3b, 0x54, 0xa4, 0x0d, 0xa8, 0x66, 0x0c, 0x57, 0x8e, 0x6d, 0x94, 0x73, 0xc2, 0x0b,
	0x67, 0xe8, 0x1a, 0x3b, 0xa8, 0x02, 0x3b, 0x5d, 0xdc, 0xb9, 0x32, 0x76, 0xf9, 0x05, 0x20, 0x9b,
	0xe1, 0x31, 0x0c, 0xdd, 0x0e, 0xe6, 0x57, 0xb3, 0x3d, 0x1e, 0x54, 0x66, 0xee, 0x9c, 0x3a, 0xc2,
	0xb4, 0xff, 0xe2, 0x9f, 0x7b, 0xb0, 0xcf, 0x83, 0x38, 0xa3, 0x21, 0xfa, 0x1a, 0x2a, 0x36, 0xf9,
	0x9d, 0xd8, 0x9c, 0xd0, 0xe1, 0xea, 0x66, 0x25, 0x77, 0xb5, 0x93, 0xa3, 0x75, 0xb3, 0xac, 0xcb,
	0xd7, 0x00, 0xc3, 0x74, 0x1c, 0xce, 0x98, 0xe8, 0xdf, 0x07, 0x2b, 0x7d, 0x55, 0x61, 0x0f, 0xd7,
	0xac, 0x12, 0x7a, 0x0a, 0xf5, 0x1e, 0x61, 0xb9, 0x0c, 0x6f, 0xd9, 0x26, 0x4f, 0x4e, 0x36, 0x5a,
	0x40, 0xde, 0x33, 0x3a, 0x00, 0xf9, 0x8d, 0xfd, 0x56, 0x86, 0x47, 0x39, 0xc3, 0xe6, 0xf5, 0xfe,
	0x1c, 0x5a, 0x3d, 0xc2, 0x6e, 0x8a, 0xee, 0x56, 0x9e, 0xfc, 0xc8, 0x59, 0xa8, 0xd1, 0xaf, 0x00,
	0x3a, 0x63, 0x1a, 0x67, 0x27, 0xe4, 0x5b, 0x49, 0x36, 0xce, 0xe8, 0xe8, 0x39, 0xec, 0xf5, 0x08,
	0xe3, 0xdf, 0x46, 0x5b, 0xcf, 0xe9, 0xe5, 0x05, 0xda, 0x44, 0x57, 0x60, 0xac, 0xdf, 0x20, 0xd1,
	0x93, 0x0f, 0x5c, 0x2e, 0xb3, 0x32, 0x7c, 0x72, 0xe7, 0xf5, 0x13, 0x7d, 0x0b, 0xed, 0x8d, 0x6b,
	0x16, 0xfa, 0xe4, 0x43, 0x57, 0xb0, 0x8c, 0xda, 0xbc, 0xfb, 0x96, 0x86, 0x06, 0xd0, 0x1e, 0x12,
	0xd6, 0x5b, 0xfd, 0x0c, 0x3f, 0xbe, 0xe5, 0x3f, 0x45, 0x46, 0xfb, 0xf8, 0x83, 0x7f, 0x31, 0x90,
	0x03, 0xc6, 0x30, 0xfb, 0x7d, 0xf0, 0x5f, 0x22, 0xcc, 0x14, 0xa9, 0xff, 0x47, 0xa0, 0xa2, 0xab,
	0xee, 0x0d, 0x8e, 0xa2, 0x7f, 0x17, 0xa7, 0x0f, 0xbf, 0x3d, 0x64, 0x44, 0x76, 0xd3, 0xe7, 0xcb,
	0xf9, 0xf4, 0xb9, 0x5c, 0x3d, 0xde, 0x13, 0xbf, 0xc9, 0xbe, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x7b, 0x56, 0xd8, 0xda, 0x93, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GameComClient is the client API for GameCom service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameComClient interface {
	// Game-related
	NewMatch(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error)
	SubmitTurn(ctx context.Context, in *TurnRequest, opts ...grpc.CallOption) (*TurnResponse, error)
	GetGameState(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*GameStateResponse, error)
	GetTimeout(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*GetTimeoutResponse, error)
	GetOpponentInfo(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*OpponentInfoResponse, error)
	AbortMatch(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*Nothing, error)
	GetElo(ctx context.Context, in *IDPacket, opts ...grpc.CallOption) (*EloValues, error)
	// Organisation-related
	UserRegistration(ctx context.Context, in *UserRegistrationRequest, opts ...grpc.CallOption) (*UserRegistrationResponse, error)
	GroupRegistration(ctx context.Context, in *GroupRegistrationRequest, opts ...grpc.CallOption) (*GroupRegistrationResponse, error)
	SetGroupPseudonym(ctx context.Context, in *SetPseudonymRequest, opts ...grpc.CallOption) (*SetPseudonymResponse, error)
	SetUserPseudonym(ctx context.Context, in *SetPseudonymRequest, opts ...grpc.CallOption) (*SetPseudonymResponse, error)
	GetUserToken(ctx context.Context, in *AuthPacket, opts ...grpc.CallOption) (*GetUserTokenResponse, error)
}

type gameComClient struct {
	cc grpc.ClientConnInterface
}

func NewGameComClient(cc grpc.ClientConnInterface) GameComClient {
	return &gameComClient{cc}
}

func (c *gameComClient) NewMatch(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error) {
	out := new(MatchResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/NewMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) SubmitTurn(ctx context.Context, in *TurnRequest, opts ...grpc.CallOption) (*TurnResponse, error) {
	out := new(TurnResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/SubmitTurn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) GetGameState(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*GameStateResponse, error) {
	out := new(GameStateResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/GetGameState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) GetTimeout(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*GetTimeoutResponse, error) {
	out := new(GetTimeoutResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/GetTimeout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) GetOpponentInfo(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*OpponentInfoResponse, error) {
	out := new(OpponentInfoResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/GetOpponentInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) AbortMatch(ctx context.Context, in *MatchIDPacket, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/AbortMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) GetElo(ctx context.Context, in *IDPacket, opts ...grpc.CallOption) (*EloValues, error) {
	out := new(EloValues)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/GetElo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) UserRegistration(ctx context.Context, in *UserRegistrationRequest, opts ...grpc.CallOption) (*UserRegistrationResponse, error) {
	out := new(UserRegistrationResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/UserRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) GroupRegistration(ctx context.Context, in *GroupRegistrationRequest, opts ...grpc.CallOption) (*GroupRegistrationResponse, error) {
	out := new(GroupRegistrationResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/GroupRegistration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) SetGroupPseudonym(ctx context.Context, in *SetPseudonymRequest, opts ...grpc.CallOption) (*SetPseudonymResponse, error) {
	out := new(SetPseudonymResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/SetGroupPseudonym", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) SetUserPseudonym(ctx context.Context, in *SetPseudonymRequest, opts ...grpc.CallOption) (*SetPseudonymResponse, error) {
	out := new(SetPseudonymResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/SetUserPseudonym", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameComClient) GetUserToken(ctx context.Context, in *AuthPacket, opts ...grpc.CallOption) (*GetUserTokenResponse, error) {
	out := new(GetUserTokenResponse)
	err := c.cc.Invoke(ctx, "/netcode.GameCom/GetUserToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameComServer is the server API for GameCom service.
type GameComServer interface {
	// Game-related
	NewMatch(context.Context, *MatchRequest) (*MatchResponse, error)
	SubmitTurn(context.Context, *TurnRequest) (*TurnResponse, error)
	GetGameState(context.Context, *MatchIDPacket) (*GameStateResponse, error)
	GetTimeout(context.Context, *MatchIDPacket) (*GetTimeoutResponse, error)
	GetOpponentInfo(context.Context, *MatchIDPacket) (*OpponentInfoResponse, error)
	AbortMatch(context.Context, *MatchIDPacket) (*Nothing, error)
	GetElo(context.Context, *IDPacket) (*EloValues, error)
	// Organisation-related
	UserRegistration(context.Context, *UserRegistrationRequest) (*UserRegistrationResponse, error)
	GroupRegistration(context.Context, *GroupRegistrationRequest) (*GroupRegistrationResponse, error)
	SetGroupPseudonym(context.Context, *SetPseudonymRequest) (*SetPseudonymResponse, error)
	SetUserPseudonym(context.Context, *SetPseudonymRequest) (*SetPseudonymResponse, error)
	GetUserToken(context.Context, *AuthPacket) (*GetUserTokenResponse, error)
}

// UnimplementedGameComServer can be embedded to have forward compatible implementations.
type UnimplementedGameComServer struct {
}

func (*UnimplementedGameComServer) NewMatch(ctx context.Context, req *MatchRequest) (*MatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewMatch not implemented")
}
func (*UnimplementedGameComServer) SubmitTurn(ctx context.Context, req *TurnRequest) (*TurnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTurn not implemented")
}
func (*UnimplementedGameComServer) GetGameState(ctx context.Context, req *MatchIDPacket) (*GameStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGameState not implemented")
}
func (*UnimplementedGameComServer) GetTimeout(ctx context.Context, req *MatchIDPacket) (*GetTimeoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeout not implemented")
}
func (*UnimplementedGameComServer) GetOpponentInfo(ctx context.Context, req *MatchIDPacket) (*OpponentInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOpponentInfo not implemented")
}
func (*UnimplementedGameComServer) AbortMatch(ctx context.Context, req *MatchIDPacket) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AbortMatch not implemented")
}
func (*UnimplementedGameComServer) GetElo(ctx context.Context, req *IDPacket) (*EloValues, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetElo not implemented")
}
func (*UnimplementedGameComServer) UserRegistration(ctx context.Context, req *UserRegistrationRequest) (*UserRegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRegistration not implemented")
}
func (*UnimplementedGameComServer) GroupRegistration(ctx context.Context, req *GroupRegistrationRequest) (*GroupRegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupRegistration not implemented")
}
func (*UnimplementedGameComServer) SetGroupPseudonym(ctx context.Context, req *SetPseudonymRequest) (*SetPseudonymResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGroupPseudonym not implemented")
}
func (*UnimplementedGameComServer) SetUserPseudonym(ctx context.Context, req *SetPseudonymRequest) (*SetPseudonymResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserPseudonym not implemented")
}
func (*UnimplementedGameComServer) GetUserToken(ctx context.Context, req *AuthPacket) (*GetUserTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserToken not implemented")
}

func RegisterGameComServer(s *grpc.Server, srv GameComServer) {
	s.RegisterService(&_GameCom_serviceDesc, srv)
}

func _GameCom_NewMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).NewMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/NewMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).NewMatch(ctx, req.(*MatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_SubmitTurn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).SubmitTurn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/SubmitTurn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).SubmitTurn(ctx, req.(*TurnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_GetGameState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchIDPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).GetGameState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/GetGameState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).GetGameState(ctx, req.(*MatchIDPacket))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_GetTimeout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchIDPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).GetTimeout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/GetTimeout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).GetTimeout(ctx, req.(*MatchIDPacket))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_GetOpponentInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchIDPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).GetOpponentInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/GetOpponentInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).GetOpponentInfo(ctx, req.(*MatchIDPacket))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_AbortMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchIDPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).AbortMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/AbortMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).AbortMatch(ctx, req.(*MatchIDPacket))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_GetElo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IDPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).GetElo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/GetElo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).GetElo(ctx, req.(*IDPacket))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_UserRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).UserRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/UserRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).UserRegistration(ctx, req.(*UserRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_GroupRegistration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).GroupRegistration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/GroupRegistration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).GroupRegistration(ctx, req.(*GroupRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_SetGroupPseudonym_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPseudonymRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).SetGroupPseudonym(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/SetGroupPseudonym",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).SetGroupPseudonym(ctx, req.(*SetPseudonymRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_SetUserPseudonym_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPseudonymRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).SetUserPseudonym(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/SetUserPseudonym",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).SetUserPseudonym(ctx, req.(*SetPseudonymRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameCom_GetUserToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthPacket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameComServer).GetUserToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/netcode.GameCom/GetUserToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameComServer).GetUserToken(ctx, req.(*AuthPacket))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameCom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "netcode.GameCom",
	HandlerType: (*GameComServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewMatch",
			Handler:    _GameCom_NewMatch_Handler,
		},
		{
			MethodName: "SubmitTurn",
			Handler:    _GameCom_SubmitTurn_Handler,
		},
		{
			MethodName: "GetGameState",
			Handler:    _GameCom_GetGameState_Handler,
		},
		{
			MethodName: "GetTimeout",
			Handler:    _GameCom_GetTimeout_Handler,
		},
		{
			MethodName: "GetOpponentInfo",
			Handler:    _GameCom_GetOpponentInfo_Handler,
		},
		{
			MethodName: "AbortMatch",
			Handler:    _GameCom_AbortMatch_Handler,
		},
		{
			MethodName: "GetElo",
			Handler:    _GameCom_GetElo_Handler,
		},
		{
			MethodName: "UserRegistration",
			Handler:    _GameCom_UserRegistration_Handler,
		},
		{
			MethodName: "GroupRegistration",
			Handler:    _GameCom_GroupRegistration_Handler,
		},
		{
			MethodName: "SetGroupPseudonym",
			Handler:    _GameCom_SetGroupPseudonym_Handler,
		},
		{
			MethodName: "SetUserPseudonym",
			Handler:    _GameCom_SetUserPseudonym_Handler,
		},
		{
			MethodName: "GetUserToken",
			Handler:    _GameCom_GetUserToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "netcode.proto",
}
